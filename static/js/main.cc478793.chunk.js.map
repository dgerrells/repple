{"version":3,"sources":["Routes.js","styles.js","NewWorkoutPage.js","CompleteSet/SelectRepsPage.js","CompleteSet/SelectWeightPage.js","CompleteSet/SelectWorkoutPage.js","CompletedSetList.js","StatsPage/StatsUtils.js","StatsPage/FavoriteWorkout.js","StatsPage/TotalStats.js","StatsPage/WorkoutStats.js","StatsPage/WeekdayStats.js","StatsPage/StatsPage.js","App.js","index.js"],"names":["START_WORKOUT","STATS","HOME","BackButton","styled","IconButton","marginLeft","marginRight","RightButton","AppBar","AppBarHeader","position","top","HeaderText","Typography","flexGrow","TextStatHighlight","_ref","children","_ref$p","p","_ref$size","size","React","createElement","Box","component","variant","color","Page","maxWidth","minHeight","NewWorkoutPage","_React$Component","_getPrototypeOf2","_this","_classCallCheck","this","_len","arguments","length","args","Array","_key","_possibleConstructorReturn","_getPrototypeOf","call","apply","concat","state","workoutName","onNameChange","event","setState","target","value","helperText","onAddWorkout","_this$props","props","addWorkout","history","doesWorkoutExist","workout","name","trim","created","Date","getTime","goBack","_inherits","_createClass","key","_this$state","Fragment","Toolbar","aria-label","onClick","push","ArrowBack","width","mx","my","textAlign","TextField","required","id","label","placeholder","margin","onChange","fullWidth","Button","disabled","Component","Value","Paper","height","BottomActions","bottom","display","marginTop","justifyContent","BottomAction","ml","borderRadius","textTransform","SelectRepsPage","valMult","onChangeValMult","newMult","onCompleteSet","val","completeSet","weight","_this$props2","workouts","match","filter","params","Number","parseInt","_this2","_this$state2","values","from","keys","Grid","container","justify","alignItems","spacing","map","v","item","xs","elevation","fontFamily","fontWeight","fontSize","SelectWeightPage","onSelectWeight","pl","NewWorkoutButton","paddingLeft","paddingRight","zIndex","SearchInput","InputBase","background","WorkoutName","SelectWorkoutPage","pageStateKey","onChangeFilter","Store","set","localPageState","get","m","toLowerCase","indexOf","sort","a","b","localeCompare","DateHeader","ListSubheader","backgroundColor","SetCount","Avatar","CompletedSetList","setsList","pages","addPages","parseLabel","deleteSet","sets","s","i","List","dense","toLocaleDateString","Swipeable","onSwipedRight","onSwipedLeft","ListItem","button","ListItemAvatar","ListItemText","primary","secondary","timeAgo","ListItemSecondaryAction","FileCopyIcon","pt","completedSets","forEach","date","_toConsumableArray","_objectSpread","Object","reverse","getTotalWeight","reduce","sum","getTotalReps","getStartWorkoutTime","firstSet","getLastCompletedSetTime","mostRecentSet","getFavoriteWorkoutStats","setMap","list","calcSetMap","favWorkout","prSet","max","console","log","totalWeight","pr","prTime","totalSets","totalReps","getWeekdayStats","weekdaySetsMap","day","moment","format","labels","sortedDays","favWeekday","leastFavWeekday","chartData","FavoriteWorkout","componentDidMount","stats","Card","CardContent","TotalStats","totalWorkoutTime","lastCompletedSetTime","Math","floor","options","scales","yAxes","ticks","min","maxRotation","xAxes","WorkoutStats","workoutData","weightPR","repsPerDay","Set","add","datasets","pointHoverRadius","pointRadius","data","fill","index","Bar","weekdayStats","favDayOfWeek","leastFavDayOfWeek","weekdayChartData","blueGrey","legend","Pie","StatsPage","noStats","mt","WeekdayStats","StartSetButton","theme","createMuiTheme","palette","main","default","localKey","App","save","newState","undefined","reps","w","renderHome","BarChart","withProps","PageComponent","routeProps","assign","localData","MuiThemeProvider","Helmet","charSet","content","CssBaseline","Router","Route","exact","path","render","rootElement","document","getElementById","ReactDOM"],"mappings":"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","file":"static/js/main.cc478793.chunk.js","sourcesContent":["export const CREATE_WORKOUT = '/workout/new';\r\nexport const START_WORKOUT = '/start-workout';\r\nexport const START_WORKOUT_WEIGHT = '/start-workout/:workout';\r\nexport const START_WORKOUT_REPS = '/start-workout/:workout/:weight';\r\nexport const STATS = '/stats';\r\nexport const HOME = '/';\r\n","import React from 'react';\nimport {\n  AppBar as AppBarHeader,\n  IconButton,\n  Typography,\n  Box\n} from '@material-ui/core';\nimport { styled } from '@material-ui/styles';\n\nexport const BackButton = styled(IconButton)({\n  marginLeft: -8,\n  marginRight: 16\n});\n\nexport const RightButton = styled(IconButton)({\n  marginLeft: -8,\n  marginRight: 16\n});\n\nexport const AppBar = styled(AppBarHeader)({\n  position: 'sticky',\n  top: 0\n});\n\nexport const HeaderText = styled(Typography)({\n  flexGrow: '1'\n});\n\nexport const TextStatHighlight = ({ children, p = 1, size = 'h5' }) => {\n  return (\n    <Box p={p} component=\"span\">\n      <Typography variant={size} color=\"primary\" component=\"span\">\n        {children}\n      </Typography>\n    </Box>\n  );\n};\n\nexport const Page = styled(Box)({\n  maxWidth: '468px',\n  marginLeft: 'auto',\n  marginRight: 'auto',\n  minHeight: '100vh',\n});\n","import React from \"react\";\nimport { Toolbar, Typography, Button, TextField } from \"@material-ui/core\";\nimport ArrowBack from \"@material-ui/icons/ArrowBack\";\nimport Box from \"@material-ui/core/Box\";\nimport { START_WORKOUT } from \"./Routes\";\nimport { BackButton, AppBar } from \"./styles\";\n\nclass NewWorkoutPage extends React.Component {\n  state = {\n    workoutName: \"\"\n  };\n\n  onNameChange = (event) => {\n    this.setState({\n      workoutName: event.target.value,\n      helperText: \"\"\n    });\n  };\n\n  onAddWorkout = (event) => {\n    const { workoutName } = this.state;\n    const { addWorkout, history, doesWorkoutExist } = this.props;\n    const workout = {\n      name: workoutName.trim(),\n      created: new Date().getTime()\n    };\n    if (doesWorkoutExist(workout)) {\n      this.setState({\n        helperText: \"That name already exists\"\n      });\n      return;\n    }\n    addWorkout(workout);\n    this.setState({\n      workoutName: \"\",\n      helperText: \"\"\n    });\n    history.goBack();\n  };\n\n  render() {\n    const { history } = this.props;\n    const { workoutName, helperText } = this.state;\n    return (\n      <>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <BackButton\n              color=\"inherit\"\n              aria-label=\"Back\"\n              onClick={() => history.push(START_WORKOUT)}\n            >\n              <ArrowBack />\n            </BackButton>\n            <Box width={1}>\n              <Typography variant=\"h6\" color=\"inherit\">\n                New workout\n              </Typography>\n            </Box>\n          </Toolbar>\n        </AppBar>\n        <Box mx={[1, 'auto']} my={[1, '0.5rem']} textAlign=\"center\" maxWidth=\"400px\">\n          <TextField\n            required\n            id=\"outlined-required\"\n            label=\"Workout Name\"\n            placeholder=\"...box jump\"\n            margin=\"normal\"\n            value={workoutName}\n            onChange={this.onNameChange}\n            variant=\"outlined\"\n            fullWidth\n            helperText={helperText}\n          />\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={this.onAddWorkout}\n            disabled={!workoutName.trim()}\n          >\n            Save\n          </Button>\n        </Box>\n      </>\n    );\n  }\n}\n\nexport default NewWorkoutPage;\n","import React from \"react\";\nimport { Toolbar, Typography, Button, Paper, Grid } from \"@material-ui/core\";\nimport { styled } from \"@material-ui/styles\";\nimport ArrowBack from \"@material-ui/icons/ArrowBack\";\nimport Box from \"@material-ui/core/Box\";\nimport { BackButton, AppBar, Page } from \"../styles\";\nimport { HOME, START_WORKOUT } from \"../Routes\";\nconst Value = styled(Paper)({\n  height: \"100%\"\n});\n\nconst BottomActions = styled(Box)({\n  position: \"sticky\",\n  bottom: \"0.5rem\",\n  display: \"flex\",\n  marginTop: \"1.5rem\",\n  justifyContent: \"center\"\n});\n\nconst BottomAction = styled(Button)(({ ml }) => ({\n  borderRadius: \"1rem\",\n  textTransform: \"none\",\n  marginLeft: `${ml}`\n}));\n\nclass SelectRepsPage extends React.Component {\n  state = {\n    valMult: 1\n  };\n\n  componentDidMount() {\n    const { workouts, history, match } = this.props;\n\n    const workout = workouts.filter(\n      (workout) => workout.name === match.params.workout\n    )[0];\n\n    if (!workout) {\n      history.push(START_WORKOUT);\n      return;\n    }\n    this.setState({\n      workout,\n      weight: Number.parseInt(match.params.weight, 10) || 0\n    });\n  }\n\n  onChangeValMult = (newMult) => {\n    this.setState({\n      valMult: newMult\n    });\n  };\n\n  onCompleteSet = (val) => {\n    const { completeSet, history } = this.props;\n    const { valMult, weight, workout } = this.state;\n    completeSet(workout, weight, val * valMult);\n    history.push(HOME);\n  };\n\n  render() {\n    const { history } = this.props;\n    const { valMult, workout, weight } = this.state;\n    const values = Array.from(Array(20).keys());\n\n    if (!workout) {\n      return null;\n    }\n\n    return (\n      <>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <BackButton\n              color=\"inherit\"\n              aria-label=\"Back\"\n              onClick={() => history.push(`${START_WORKOUT}/${workout.name}`)}\n            >\n              <ArrowBack />\n            </BackButton>\n            <Box width={1}>\n              <Typography variant=\"h6\" color=\"inherit\">\n                {workout.name} {weight > 0 && weight + \" lbs\"}\n              </Typography>\n            </Box>\n          </Toolbar>\n        </AppBar>\n        <Page p={1}>\n          <Grid container justify=\"center\" alignItems=\"stretch\" spacing={1}>\n            {values.map((v) => (\n              <Grid key={v} item xs={6}>\n                <Value elevation={2} onClick={() => this.onCompleteSet(v + 1)}>\n                  <Box\n                    p={2}\n                    textAlign=\"center\"\n                    fontFamily=\"Monospace\"\n                    fontWeight=\"fontWeightMedium\"\n                    fontSize={48}\n                  >\n                    {(v + 1) * valMult}\n                  </Box>\n                </Value>\n              </Grid>\n            ))}\n          </Grid>\n        </Page>\n        {/* <BottomActions>\n          <BottomAction\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => this.onChangeValMult(1)}\n          >\n            Step x 1\n          </BottomAction>\n          <BottomAction\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => this.onChangeValMult(2)}\n            ml=\"1rem\"\n          >\n            Step x 2\n          </BottomAction>\n          <BottomAction\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => this.onChangeValMult(5)}\n            ml=\"1rem\"\n          >\n            Step x 5\n          </BottomAction>\n        </BottomActions> */}\n        <BottomActions>\n          <BottomAction\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => this.onCompleteSet(1)}\n          >\n            Skip\n          </BottomAction>\n        </BottomActions>\n      </>\n    );\n  }\n}\n\nexport default SelectRepsPage;\n","import React from 'react';\nimport { Toolbar, Typography, Button, Paper, Grid } from '@material-ui/core';\nimport { styled } from '@material-ui/styles';\nimport ArrowBack from '@material-ui/icons/ArrowBack';\nimport Box from '@material-ui/core/Box';\nimport { BackButton, AppBar, Page } from 'styles';\nimport { START_WORKOUT } from 'Routes';\n\nconst Value = styled(Paper)({\n  height: '100%'\n});\n\nconst BottomActions = styled(Box)({\n  position: 'sticky',\n  bottom: '0.5rem',\n  display: 'flex',\n  marginTop: '1.5rem',\n  justifyContent: 'center'\n});\n\nconst BottomAction = styled(Button)(({ ml }) => ({\n  borderRadius: '1rem',\n  textTransform: 'none',\n  marginLeft: `${ml}`\n}));\n\nclass SelectWeightPage extends React.Component {\n  state = {\n    valMult: 5\n  };\n\n  componentDidMount() {\n    const { workouts, history, match } = this.props;\n\n    const workout = workouts.filter(\n      workout => workout.name === match.params.workout\n    )[0];\n\n    if (!workout) {\n      history.push(START_WORKOUT);\n      return;\n    }\n    this.setState({\n      workout\n    });\n  }\n\n  onChangeValMult = newMult => {\n    this.setState({\n      valMult: newMult\n    });\n  };\n\n  onSelectWeight = val => {\n    const { history } = this.props;\n    const { valMult, workout } = this.state;\n    history.push(`${START_WORKOUT}/${workout.name}/${val * valMult}`);\n  };\n\n  render() {\n    const { history } = this.props;\n    const { valMult, workout } = this.state;\n    const values = Array.from(Array(200).keys());\n\n    if (!workout) {\n      return null;\n    }\n\n    return (\n      <>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <BackButton\n              color=\"inherit\"\n              aria-label=\"Back\"\n              onClick={() => history.push(START_WORKOUT)}\n            >\n              <ArrowBack />\n            </BackButton>\n            <Box width={1}>\n              <Typography variant=\"h6\" color=\"inherit\">\n                {workout.name}\n              </Typography>\n            </Box>\n          </Toolbar>\n        </AppBar>\n        <Page p={1}>\n          <Grid container justify=\"center\" alignItems=\"stretch\" spacing={1}>\n            {values.map(v => (\n              <Grid key={v} item xs={6}>\n                <Value elevation={2} onClick={() => this.onSelectWeight(v + 1)}>\n                  <Box\n                    p={2}\n                    textAlign=\"center\"\n                    fontFamily=\"Monospace\"\n                    fontWeight=\"fontWeightMedium\"\n                  >\n                    <Box fontSize={48} component=\"span\">\n                      {(v + 1) * valMult}\n                    </Box>\n                    <Box pl={1} fontSize={22} component=\"span\">\n                      lbs\n                    </Box>\n                  </Box>\n                </Value>\n              </Grid>\n            ))}\n          </Grid>\n        </Page>\n        <BottomActions>\n          <BottomAction\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => this.onSelectWeight(0)}\n          >\n            Skip\n          </BottomAction>\n        </BottomActions>\n      </>\n    );\n  }\n}\n\nexport default SelectWeightPage;\n","import React from 'react';\nimport { Toolbar, Button, Paper } from '@material-ui/core';\nimport Store from 'store';\nimport { styled } from '@material-ui/styles';\nimport ArrowBack from '@material-ui/icons/ArrowBack';\nimport Box from '@material-ui/core/Box';\nimport InputBase from '@material-ui/core/InputBase';\nimport { BackButton, AppBar, Page } from 'styles';\nimport { HOME, START_WORKOUT, CREATE_WORKOUT } from 'Routes';\n\nconst NewWorkoutButton = styled(Button)({\n  width: 'auto',\n  marginLeft: 'auto',\n  marginRight: 'auto',\n  paddingLeft: '1rem',\n  paddingRight: '1rem',\n  borderRadius: '1rem',\n  zIndex: 200\n});\n\nconst SearchInput = styled(InputBase)({\n  background: 'rgba(255, 255, 255, 0.15)',\n  paddingRight: '1rem',\n  paddingLeft: '1rem',\n  color: 'white',\n  borderRadius: '6px',\n  width: '100%',\n});\nconst WorkoutName = styled(Box)({\n  textTransform: 'capitalize'\n});\n\nclass SelectWorkoutPage extends React.Component {\n  pageStateKey = 'StartSetPage';\n  state = {\n    filter: ''\n  };\n\n  componentDidMount() {\n    const localPageState = Store.get(this.pageStateKey) || {};\n    this.setState(localPageState);\n  }\n\n  onChangeFilter = event => {\n    this.setState({ filter: event.target.value }, () =>\n      Store.set(this.pageStateKey, this.state)\n    );\n  };\n\n  render() {\n    const { workouts, history } = this.props;\n    const { filter } = this.state;\n\n    return (\n      <>\n        <AppBar>\n          <Toolbar>\n            <BackButton\n              color=\"inherit\"\n              aria-label=\"Back\"\n              onClick={() => history.push(HOME)}\n            >\n              <ArrowBack />\n            </BackButton>\n            <Box textAlign=\"center\" width={1}>\n              <SearchInput\n                placeholder=\"Filter...\"\n                value={filter}\n                onChange={this.onChangeFilter}\n              />\n            </Box>\n          </Toolbar>\n        </AppBar>\n        <Page p={1}>\n          {workouts.length === 0 && (\n            <WorkoutName p={2} m={1} textAlign=\"center\" fontFamily=\"Monospace\">\n              No workouts. Tab below to add one.\n            </WorkoutName>\n          )}\n          {workouts\n            .filter(workout => {\n              return (\n                !filter ||\n                workout.name.toLowerCase().indexOf(filter.toLowerCase()) > -1\n              );\n            })\n            .sort((a, b) => a.name.localeCompare(b.name))\n            .map(workout => (\n              <Paper elevation={2} key={workout.name}>\n              <WorkoutName\n                  p={2}\n                  m={1}\n                  textAlign=\"center\"\n                  fontFamily=\"Monospace\"\n                  onClick={() =>\n                    history.push(`${START_WORKOUT}/${workout.name}`)\n                  }\n                >\n                  {workout.name}\n                </WorkoutName>\n              </Paper>\n            ))}\n        </Page>\n        <Box\n          display=\"flex\"\n          position=\"sticky\"\n          m=\"1rem\"\n          bottom=\"1rem\"\n          zIndex={500}\n        >\n          <NewWorkoutButton\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={() => history.push(CREATE_WORKOUT)}\n          >\n            Add Workout\n          </NewWorkoutButton>\n        </Box>\n      </>\n    );\n  }\n}\n\nexport default SelectWorkoutPage;\n","import React from 'react';\nimport { format as timeAgo } from 'timeago.js';\nimport { Swipeable } from 'react-swipeable';\nimport {\n  Button,\n  IconButton,\n  ListItem,\n  Avatar,\n  List,\n  ListItemText,\n  ListSubheader,\n  ListItemAvatar,\n  ListItemSecondaryAction\n} from '@material-ui/core';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport { styled } from '@material-ui/styles';\nimport Box from '@material-ui/core/Box';\nimport { START_WORKOUT } from 'Routes';\n\nconst DateHeader = styled(ListSubheader)({\n  backgroundColor: 'white'\n});\n\nconst SetCount = styled(Avatar)({\n  backgroundColor: '#B4A4A4'\n});\n\nclass CompletedSetList extends React.Component {\n  state = {\n    setsList: [],\n    pages: 2\n  };\n\n  static getDerivedStateFromProps(props, state) {\n    const { completedSets } = props;\n    const map = {};\n    completedSets.forEach(set => {\n      const date = new Date(set.created).toLocaleDateString('en-US');\n      map[date] = [...(map[date] || []), set];\n    });\n\n    return {\n      ...state,\n      setsList: Object.keys(map)\n        .sort((a, b) => new Date(a) - new Date(b))\n        .reverse()\n        .map(date => map[date].sort().reverse())\n    };\n  }\n\n  addPages = () => {\n    this.setState({\n      pages: this.state.pages + 2\n    });\n  };\n\n  parseLabel = set => {\n    if (set.weight && set.weight > 0) {\n      return `${set.workout.name} ${set.weight} lbs`;\n    }\n    return set.workout.name;\n  };\n\n  render() {\n    const { setsList, pages } = this.state;\n    const { history, deleteSet, completeSet } = this.props;\n\n    const sets = setsList\n      .filter((s, i) => i < pages)\n      .map((sets, i) => {\n        return (\n          <List dense={true} key={i}>\n            <DateHeader>\n              {new Date(sets[0].created).toLocaleDateString('en-US')}\n            </DateHeader>\n            {sets.map(set => (\n              <Swipeable\n                key={set.created}\n                onSwipedRight={() => deleteSet(set)}\n                onSwipedLeft={() => deleteSet(set)}\n              >\n                <ListItem\n                  button\n                  onClick={() =>\n                    history.push(`${START_WORKOUT}/${set.workout.name}`)\n                  }\n                >\n                  <ListItemAvatar>\n                    <SetCount>\n                      <span>{set.value}</span>\n                    </SetCount>\n                  </ListItemAvatar>\n                  <ListItemText\n                    primary={this.parseLabel(set)}\n                    secondary={timeAgo(set.created)}\n                  />\n                  <ListItemSecondaryAction>\n                    <IconButton\n                      color=\"secondary\"\n                      onClick={() =>\n                        completeSet(set.workout, set.weight, set.value)\n                      }\n                    >\n                      <FileCopyIcon />\n                    </IconButton>\n                  </ListItemSecondaryAction>\n                </ListItem>\n              </Swipeable>\n            ))}\n          </List>\n        );\n      });\n\n    return (\n      <>\n        {sets}\n        {pages < setsList.length && (\n          <Box pt={2} justifyContent=\"center\" display=\"flex\">\n            <Button\n              color=\"secondary\"\n              variant=\"outlined\"\n              onClick={this.addPages}\n            >\n              Show Older\n            </Button>\n          </Box>\n        )}\n      </>\n    );\n  }\n}\n\nexport default CompletedSetList;\n","import moment from 'moment';\r\n\r\nexport const calcSetMap = sets => {\r\n  const setMap = {};\r\n  sets.forEach(set => {\r\n    const list = setMap[set.workout.name] || [];\r\n    list.push(set);\r\n    setMap[set.workout.name] = list;\r\n  });\r\n  return setMap;\r\n};\r\n\r\nexport const getTotalWeight = sets => {\r\n  return sets.reduce(\r\n    (sum, set) => sum + Number.parseInt(set.weight, 0) || 0,\r\n    0\r\n  );\r\n};\r\n\r\nexport const getTotalReps = sets => {\r\n  return sets.reduce((sum, set) => sum + set.value, 0);\r\n};\r\n\r\nexport const getStartWorkoutTime = sets => {\r\n  let firstSet;\r\n  sets.forEach(set => {\r\n    if (!firstSet || firstSet.created > set.created) {\r\n      firstSet = set;\r\n    }\r\n  });\r\n  return firstSet.created;\r\n};\r\n\r\nexport const getLastCompletedSetTime = sets => {\r\n  let mostRecentSet;\r\n  sets.forEach(set => {\r\n    if (!mostRecentSet || mostRecentSet.created < set.created) {\r\n      mostRecentSet = set;\r\n    }\r\n  });\r\n  return mostRecentSet.created;\r\n};\r\n\r\nexport const getFavoriteWorkoutStats = (sets, workouts) => {\r\n  const setMap = calcSetMap(sets);\r\n  let favWorkout = {};\r\n\r\n  workouts\r\n    .filter(workout => setMap[workout.name])\r\n    .forEach(workout => {\r\n      if (\r\n        setMap[workout.name].length > (setMap[favWorkout.name] || []).length\r\n      ) {\r\n        favWorkout = workout;\r\n      }\r\n    });\r\n  const prSet = setMap[favWorkout.name].reduce(\r\n    (max, set) => (max.weight > set.weight ? max : set),\r\n    { weight: 0 }\r\n  );\r\n  console.log(prSet);\r\n  return {\r\n    name: favWorkout.name,\r\n    totalWeight: setMap[favWorkout.name].reduce(\r\n      (sum, set) => sum + Number.parseInt(set.weight, 10),\r\n      0\r\n    ),\r\n    pr: prSet.weight,\r\n    prTime: prSet.created,\r\n    totalSets: setMap[favWorkout.name].length,\r\n    totalReps: setMap[favWorkout.name].reduce((sum, set) => sum + set.value, 0)\r\n  };\r\n};\r\n\r\nexport const getWeekdayStats = sets => {\r\n  const weekdaySetsMap = {};\r\n\r\n  sets.forEach(set => {\r\n    const day = moment(set.created).format('dddd');\r\n    weekdaySetsMap[day] = (weekdaySetsMap[day] || 0) + 1;\r\n  });\r\n\r\n  const labels = Object.keys(weekdaySetsMap);\r\n  const sortedDays = labels.sort(\r\n    (a, b) => weekdaySetsMap[b] - weekdaySetsMap[a]\r\n  );\r\n\r\n  return {\r\n    favWeekday: sortedDays[0],\r\n    leastFavWeekday: sortedDays[sortedDays.length - 1],\r\n    labels,\r\n    chartData: labels.map(day => weekdaySetsMap[day])\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { Typography, Card, CardContent } from '@material-ui/core';\r\nimport { format as timeAgo } from 'timeago.js';\r\nimport Box from '@material-ui/core/Box';\r\nimport { TextStatHighlight } from 'styles';\r\nimport { getFavoriteWorkoutStats } from './StatsUtils';\r\n\r\nclass FavoriteWorkout extends React.Component {\r\n  state = {};\r\n  componentDidMount = () => {\r\n    const { sets, workouts } = this.props;\r\n    this.setState({\r\n      stats: getFavoriteWorkoutStats(sets, workouts)\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { stats } = this.state;\r\n    if (!stats) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <Box m={2}>\r\n        <Card>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\">\r\n              <TextStatHighlight>{stats.name}</TextStatHighlight>\r\n              is your favorite workout where you completed\r\n              <TextStatHighlight>{stats.totalSets}</TextStatHighlight>\r\n              sets for a total of\r\n              <TextStatHighlight>{stats.totalReps}</TextStatHighlight>\r\n              reps\r\n              {stats.totalWeight > 0 && (\r\n                <Typography color=\"textSecondary\" component=\"span\">\r\n                  {' '}\r\n                  with\r\n                  <TextStatHighlight>{stats.totalWeight} lbs</TextStatHighlight>\r\n                  moved\r\n                </Typography>\r\n              )}\r\n              !\r\n            </Typography>\r\n            {stats.pr > 0 && (\r\n              <Typography color=\"textSecondary\">\r\n                Your PR is\r\n                <TextStatHighlight>{stats.pr} lbs</TextStatHighlight>\r\n                and was completed {timeAgo(stats.prTime)}\r\n              </Typography>\r\n            )}\r\n          </CardContent>\r\n        </Card>\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FavoriteWorkout;\r\n","import React from 'react';\r\nimport { format as timeAgo } from 'timeago.js';\r\nimport { Typography, Card, CardContent} from '@material-ui/core';\r\nimport Box from '@material-ui/core/Box';\r\nimport { TextStatHighlight } from 'styles';\r\nimport {\r\n  getTotalWeight,\r\n  getStartWorkoutTime,\r\n  getTotalReps,\r\n  getLastCompletedSetTime\r\n} from './StatsUtils';\r\n\r\nclass TotalStats extends React.Component {\r\n  state = {};\r\n  componentDidMount = () => {\r\n    const { completedSets } = this.props;\r\n    const totalSets = completedSets.length;\r\n    this.setState({\r\n      totalWorkoutTime: timeAgo(getStartWorkoutTime(completedSets)),\r\n      totalSets,\r\n      totalReps: getTotalReps(completedSets),\r\n      totalWeight: getTotalWeight(completedSets),\r\n      lastCompletedSetTime: timeAgo(getLastCompletedSetTime(completedSets))\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      totalSets,\r\n      totalReps,\r\n      totalWorkoutTime,\r\n      totalWeight,\r\n      lastCompletedSetTime\r\n    } = this.state;\r\n    if (!totalSets) {\r\n      return null;\r\n    }\r\n    return (\r\n      <Box m={2}>\r\n        <Card>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\">\r\n              You started working out\r\n              <TextStatHighlight>{totalWorkoutTime}</TextStatHighlight>\r\n              Good job!\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              You have completed a total of\r\n              <TextStatHighlight>{totalSets}</TextStatHighlight>\r\n              sets for a total of\r\n              <TextStatHighlight>{totalReps}</TextStatHighlight>\r\n              reps. Awesome!\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              Your last workout was\r\n              <TextStatHighlight>{lastCompletedSetTime}</TextStatHighlight>\r\n            </Typography>\r\n            {totalWeight > 0 && (\r\n              <Typography color=\"textSecondary\">\r\n                All together you have pushed, pulled, and lifted\r\n                <TextStatHighlight>{totalWeight} lbs</TextStatHighlight>\r\n                or\r\n                <TextStatHighlight>\r\n                  {Math.floor(totalWeight / 2.2046)} kg\r\n                </TextStatHighlight>\r\n                Woh!\r\n              </Typography>\r\n            )}\r\n          </CardContent>\r\n        </Card>\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TotalStats;\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nimport { Typography, Card, CardContent } from '@material-ui/core';\r\nimport Box from '@material-ui/core/Box';\r\nimport { TextStatHighlight } from 'styles';\r\nimport { Bar } from 'react-chartjs-2';\r\nconst options = {\r\n  scales: {\r\n    yAxes: [\r\n      {\r\n        ticks: { min: 0, maxRotation: 30 }\r\n      }\r\n    ],\r\n    xAxes: [\r\n      {\r\n        ticks: {\r\n          maxRotation: 20,\r\n          min: 'March'\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nclass WorkoutStats extends React.Component {\r\n  state = {};\r\n  componentDidMount = () => {\r\n    const { workouts, setMap } = this.props;\r\n    if (!setMap) {\r\n      return;\r\n    }\r\n\r\n    const workoutData = workouts\r\n      .filter(workout => setMap[workout.name])\r\n      .map(workout => {\r\n        const sets = setMap[workout.name];\r\n        const totalReps = sets.reduce((sum, set) => sum + set.value, 0);\r\n        const totalSets = sets.length;\r\n        let weightPR = 0;\r\n\r\n        const repsPerDay = {};\r\n        let labels = new Set();\r\n        sets.forEach(set => {\r\n          const date = moment(set.created).format('MMM Do');\r\n          repsPerDay[date] = (repsPerDay[date] || 0) + set.value;\r\n          labels.add(date);\r\n          weightPR = Math.max(weightPR, set.weight || 0);\r\n        });\r\n        labels = Array.from(labels);\r\n        const values = labels.map(date => repsPerDay[date]);\r\n\r\n        const chartData = {\r\n          labels: Array.from(labels),\r\n          datasets: [\r\n            {\r\n              label: workout.name,\r\n              pointHoverRadius: 5,\r\n              pointRadius: 3,\r\n              data: values,\r\n              fill: false,\r\n              backgroundColor: '#713A4F'\r\n            }\r\n          ]\r\n        };\r\n        return {\r\n          chartData,\r\n          totalReps,\r\n          totalSets,\r\n          weightPR,\r\n          name: workout.name\r\n        };\r\n      });\r\n    this.setState({ workoutData });\r\n  };\r\n\r\n  render() {\r\n    const { workoutData } = this.state;\r\n    if (!workoutData) {\r\n      return null;\r\n    }\r\n    return workoutData.map((data, index) => (\r\n      <Box m={2} key={index}>\r\n        <Card>\r\n          <CardContent>\r\n            <Typography variant=\"h5\" color=\"primary\">\r\n              {data.name}\r\n            </Typography>\r\n            <Typography>\r\n              Total Sets:\r\n              <TextStatHighlight size=\"h6\">{data.totalSets}</TextStatHighlight>\r\n            </Typography>\r\n            <Typography>\r\n              Total Reps:\r\n              <TextStatHighlight size=\"h6\">{data.totalReps}</TextStatHighlight>\r\n            </Typography>\r\n            {data.weightPR > 0 && (\r\n              <Typography>\r\n                PR:\r\n                <TextStatHighlight size=\"h6\">\r\n                  {data.weightPR} lbs\r\n                </TextStatHighlight>\r\n              </Typography>\r\n            )}\r\n          </CardContent>\r\n          <Box m={2}>\r\n            <Bar data={data.chartData} options={options} />\r\n          </Box>\r\n        </Card>\r\n      </Box>\r\n    ));\r\n  }\r\n}\r\n\r\nexport default WorkoutStats;\r\n","import React from 'react';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport { Typography, Card, CardContent } from '@material-ui/core';\r\nimport Box from '@material-ui/core/Box';\r\nimport blueGrey from '@material-ui/core/colors/blueGrey';\r\nimport { getWeekdayStats } from './StatsUtils';\r\nimport { TextStatHighlight } from 'styles';\r\n\r\nclass TotalStats extends React.Component {\r\n  state = {};\r\n  componentDidMount = () => {\r\n    const { sets } = this.props;\r\n    const weekdayStats = getWeekdayStats(sets);\r\n\r\n    this.setState({\r\n      favDayOfWeek: weekdayStats.favWeekday,\r\n      leastFavDayOfWeek: weekdayStats.leastFavWeekday,\r\n      weekdayChartData: {\r\n        labels: weekdayStats.labels,\r\n        datasets: [\r\n          {\r\n            data: weekdayStats.chartData,\r\n            backgroundColor: Object.values(blueGrey)\r\n          }\r\n        ]\r\n      },\r\n      options: {\r\n        legend: {\r\n          position: 'left'\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      weekdayChartData,\r\n      options,\r\n      favDayOfWeek,\r\n      leastFavDayOfWeek\r\n    } = this.state;\r\n    if (!weekdayChartData) {\r\n      return null;\r\n    }\r\n    return (\r\n      <Box m={2}>\r\n        <Card>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\">\r\n              You workout most often on a\r\n              <TextStatHighlight>{favDayOfWeek}</TextStatHighlight>\r\n              and least often on a\r\n              <TextStatHighlight>{leastFavDayOfWeek}</TextStatHighlight>\r\n            </Typography>\r\n            <Typography color=\"textSecondary\" />\r\n            <Box m={2}>\r\n              <Pie data={weekdayChartData} options={options} />\r\n            </Box>\r\n          </CardContent>\r\n        </Card>\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TotalStats;\r\n","import React from 'react';\r\nimport {\r\n  Toolbar,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport ArrowBack from '@material-ui/icons/ArrowBack';\r\nimport Box from '@material-ui/core/Box';\r\nimport FavoriteWorkout from './FavoriteWorkout';\r\nimport { BackButton, AppBar, Page } from '../styles';\r\nimport TotalStats from './TotalStats';\r\nimport WorkoutStats from './WorkoutStats';\r\nimport WeekdayStats from './WeekdayStats';\r\n\r\nclass StatsPage extends React.Component {\r\n  state = {};\r\n  componentDidMount() {\r\n    const { completedSets } = this.props;\r\n\r\n    const setMap = {};\r\n    completedSets.forEach(set => {\r\n      const list = setMap[set.workout.name] || [];\r\n      list.push(set);\r\n      setMap[set.workout.name] = list;\r\n    });\r\n\r\n    this.setState({\r\n      setMap\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { history, workouts, completedSets } = this.props;\r\n    const { setMap } = this.state;\r\n\r\n    const noStats = (\r\n      <Box textAlign=\"center\" mt={4}>\r\n        <Typography variant=\"h5\">\r\n          No stats to display until you complete a workout.\r\n        </Typography>\r\n      </Box>\r\n    );\r\n\r\n    return (\r\n      <>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <BackButton\r\n              color=\"inherit\"\r\n              aria-label=\"Back\"\r\n              onClick={() => history.push('/')}\r\n            >\r\n              <ArrowBack />\r\n            </BackButton>\r\n            <Box width={1}>\r\n              <Typography variant=\"h6\" color=\"inherit\">\r\n                Workout Stats\r\n              </Typography>\r\n            </Box>\r\n          </Toolbar>\r\n        </AppBar>\r\n        {completedSets.length === 0 && noStats}\r\n        {setMap && completedSets.length > 0 && (\r\n          <Page>\r\n            <TotalStats completedSets={completedSets} />\r\n            <FavoriteWorkout sets={completedSets} workouts={workouts} />\r\n            <WeekdayStats sets={completedSets} />\r\n            <WorkoutStats setMap={setMap} workouts={workouts} />\r\n          </Page>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StatsPage;\r\n","import React from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport Store from \"store\";\nimport {\n  AppBar,\n  Toolbar,\n  MuiThemeProvider,\n  createMuiTheme,\n  CssBaseline,\n  Button,\n  Box\n} from \"@material-ui/core\";\nimport { styled } from \"@material-ui/styles\";\nimport Helmet from \"react-helmet\";\nimport NewWorkoutPage from \"NewWorkoutPage\";\nimport SelectRepsPage from \"CompleteSet/SelectRepsPage\";\nimport SelectWeightPage from \"CompleteSet/SelectWeightPage\";\nimport SelectWorkoutPage from \"CompleteSet/SelectWorkoutPage\";\nimport CompletedSetList from \"CompletedSetList\";\nimport { HeaderText, RightButton } from \"./styles\";\nimport BarChart from '@material-ui/icons/BarChart';\nimport StatsPage from \"./StatsPage\";\nimport {\n  HOME,\n  STATS,\n  START_WORKOUT,\n  START_WORKOUT_REPS,\n  START_WORKOUT_WEIGHT,\n  CREATE_WORKOUT\n} from \"./Routes\";\n// import testData from './testData';\n\nconst StartSetButton = styled(Button)({\n  width: \"auto\",\n  marginLeft: \"auto\",\n  marginRight: \"auto\",\n  paddingLeft: \"1rem\",\n  paddingRight: \"1rem\",\n  borderRadius: \"1rem\",\n  zIndex: 200\n});\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#713A4F\"\n    },\n    secondary: {\n      main: \"#B4A4A4\"\n    },\n    background: {\n      default: \"white\"\n    }\n  }\n});\n\nconst localKey = \"local_data\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    const localData = Store.get(localKey) || {};\n    this.state = {\n      workouts: localData.workouts || [],\n      completedSets: localData.completedSets || []\n    };\n  }\n\n  save = (state) => {\n    Store.set(localKey, state);\n  };\n\n  addWorkout = (workout) => {\n    const { workouts } = this.state;\n    this.setState((state) => {\n      const newState = {\n        ...state,\n        workouts: [...workouts, workout]\n      };\n      this.save(newState);\n      return newState;\n    });\n  };\n\n  completeSet = (workout, weight = 0, reps = 0) => {\n    const { completedSets } = this.state;\n\n    this.setState((state) => {\n      const newState = {\n        ...state,\n        completedSets: [\n          ...completedSets,\n          { workout, value: reps, weight, created: new Date().getTime() }\n        ]\n      };\n      this.save(newState);\n      return newState;\n    });\n  };\n\n  deleteSet = (set) => {\n    const { completedSets } = this.state;\n\n    this.setState((state) => {\n      const newState = {\n        ...state,\n        completedSets: completedSets.filter((s) => s.created !== set.created)\n      };\n      this.save(newState);\n      return newState;\n    });\n  };\n\n  doesWorkoutExist = (workout) => {\n    return !!this.state.workouts.filter(\n      (w) => w.name.toLowerCase() === workout.name.toLowerCase()\n    ).length;\n  };\n\n  renderHome = (props) => {\n    const { history } = props;\n    const { completedSets } = this.state;\n\n    return (\n      <>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <HeaderText variant=\"h6\" color=\"inherit\">\n              Repple Tracker\n            </HeaderText>\n            <RightButton\n              color=\"inherit\"\n              aria-label=\"stats\"\n              onClick={() => history.push(STATS)}\n            >\n              <BarChart />\n            </RightButton>\n          </Toolbar>\n        </AppBar>\n        <Box m={[1, 'auto']} maxWidth=\"568px\">\n          {\n            <CompletedSetList\n              history={history}\n              completedSets={completedSets}\n              deleteSet={this.deleteSet}\n              completeSet={this.completeSet}\n            />\n          }\n        </Box>\n        <Box\n          display=\"flex\"\n          position=\"sticky\"\n          m=\"1rem\"\n          bottom=\"1rem\"\n          zIndex={500}\n        >\n          <StartSetButton\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => props.history.push(START_WORKOUT)}\n          >\n            Start Set\n          </StartSetButton>\n        </Box>\n      </>\n    );\n  };\n\n  withProps = (PageComponent) => {\n    return (routeProps) => (\n      <PageComponent\n        completeSet={this.completeSet}\n        addWorkout={this.addWorkout}\n        doesWorkoutExist={this.doesWorkoutExist}\n        {...routeProps}\n        {...this.state}\n      />\n    );\n  };\n\n  render() {\n    return (\n      <MuiThemeProvider theme={theme}>\n        <Helmet>\n          <meta charSet=\"utf-8\" />\n          <title>Repple</title>\n          <meta name=\"theme-color\" content=\"#713A4F\" />\n          <meta\n            name=\"description\"\n            content=\"Repple is a simple app to help track workout routines.\"\n          />\n        </Helmet>\n\n        <CssBaseline />\n        <Router>\n          <Box>\n            <Route exact path={HOME} render={this.renderHome} />\n            <Route\n              path={CREATE_WORKOUT}\n              render={this.withProps(NewWorkoutPage)}\n            />\n            <Route exact path={STATS} render={this.withProps(StatsPage)} />\n            <Route\n              exact\n              path={START_WORKOUT}\n              render={this.withProps(SelectWorkoutPage)}\n            />\n            <Route\n              exact\n              path={START_WORKOUT_WEIGHT}\n              component={this.withProps(SelectWeightPage)}\n            />\n            <Route\n              exact\n              path={START_WORKOUT_REPS}\n              component={this.withProps(SelectRepsPage)}\n            />\n          </Box>\n        </Router>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './base.css';\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}